{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of Welcome To Colaboratory","version":"0.3.2","provenance":[{"file_id":"/v2/external/notebooks/welcome.ipynb","timestamp":1565505600414}],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"display_name":"Python 3","name":"python3"}},"cells":[{"cell_type":"markdown","metadata":{"colab_type":"text","id":"5fCEDCU_qrC0"},"source":["<p><img alt=\"Colaboratory logo\" height=\"45px\" src=\"https://colab.research.google.com/img/colab_favicon.ico\" align=\"left\" hspace=\"10px\" vspace=\"0px\"></p>\n","\n","<h1>Welcome to Colaboratory!</h1>\n","\n","\n","Colaboratory is a free Jupyter notebook environment that requires no setup and runs entirely in the cloud.\n","\n","With Colaboratory you can write and execute code, save and share your analyses, and access powerful computing resources, all for free from your browser."]},{"cell_type":"code","metadata":{"colab_type":"code","id":"xitplqMNk_Hc","outputId":"ed4f60d2-878d-4056-c438-352dac39a112","colab":{"height":420}},"source":["#@title Introducing Colaboratory { display-mode: \"form\" }\n","#@markdown This 3-minute video gives an overview of the key features of Colaboratory:\n","from IPython.display import YouTubeVideo\n","YouTubeVideo('inN8seMm7UI', width=600, height=400)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","        <iframe\n","            width=\"600\"\n","            height=\"400\"\n","            src=\"https://www.youtube.com/embed/inN8seMm7UI\"\n","            frameborder=\"0\"\n","            allowfullscreen\n","        ></iframe>\n","        "],"text/plain":["<IPython.lib.display.YouTubeVideo at 0x7f956e9dda50>"]},"metadata":{"tags":[]},"execution_count":0}]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"GJBs_flRovLc"},"source":["## Getting Started\n","\n","The document you are reading is a  [Jupyter notebook](https://jupyter.org/), hosted in Colaboratory. It is not a static page, but an interactive environment that lets you write and execute code in Python and other languages.\n","\n","For example, here is a **code cell** with a short Python script that computes a value, stores it in a variable, and prints the result:"]},{"cell_type":"code","metadata":{"colab_type":"code","id":"gJr_9dXGpJ05","outputId":"5626194c-e802-4293-942d-2908885c3c1f","colab":{"height":35}},"source":["seconds_in_a_day = 24 * 60 * 60\n","seconds_in_a_day"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["86400"]},"metadata":{"tags":[]},"execution_count":0}]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"2fhs6GZ4qFMx"},"source":["To execute the code in the above cell, select it with a click and then either press the play button to the left of the code, or use the keyboard shortcut \"Command/Ctrl+Enter\".\n","\n","All cells modify the same global state, so variables that you define by executing a cell can be used in other cells:"]},{"cell_type":"code","metadata":{"colab_type":"code","id":"-gE-Ez1qtyIA","outputId":"8d2e4259-4682-4e19-b683-7b9087f28820","colab":{"height":35}},"source":["seconds_in_a_week = 7 * seconds_in_a_day\n","seconds_in_a_week"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["604800"]},"metadata":{"tags":[]},"execution_count":0}]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"lSrWNr3MuFUS"},"source":["For more information about working with Colaboratory notebooks, see [Overview of Colaboratory](/notebooks/basic_features_overview.ipynb).\n"]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"-Rh3-Vt9Nev9"},"source":["## More Resources\n","\n","Learn how to make the most of Python, Jupyter, Colaboratory, and related tools with these resources:\n","\n","### Working with Notebooks in Colaboratory\n","- [Overview of Colaboratory](/notebooks/basic_features_overview.ipynb)\n","- [Guide to Markdown](/notebooks/markdown_guide.ipynb)\n","- [Importing libraries and installing dependencies](/notebooks/snippets/importing_libraries.ipynb)\n","- [Saving and loading notebooks in GitHub](https://colab.research.google.com/github/googlecolab/colabtools/blob/master/notebooks/colab-github-demo.ipynb)\n","- [Interactive forms](/notebooks/forms.ipynb)\n","- [Interactive widgets](/notebooks/widgets.ipynb)\n","\n","### Working with Data\n","- [Loading data: Drive, Sheets, and Google Cloud Storage](/notebooks/io.ipynb) \n","- [Charts: visualizing data](/notebooks/charts.ipynb)\n","- [Getting started with BigQuery](/notebooks/bigquery.ipynb)\n","\n","### Machine Learning Crash Course\n","These are a few of the notebooks from Google's online Machine Learning course. See the [full course website](https://developers.google.com/machine-learning/crash-course/) for more.\n","- [Intro to Pandas](/notebooks/mlcc/intro_to_pandas.ipynb)\n","- [Tensorflow concepts](/notebooks/mlcc/tensorflow_programming_concepts.ipynb)\n","- [First steps with TensorFlow](/notebooks/mlcc/first_steps_with_tensor_flow.ipynb)\n","- [Intro to neural nets](/notebooks/mlcc/intro_to_neural_nets.ipynb)\n","- [Intro to sparse data and embeddings](/notebooks/mlcc/intro_to_sparse_data_and_embeddings.ipynb)\n","\n","### Using Accelerated Hardware\n","- [TensorFlow with GPUs](/notebooks/gpu.ipynb)\n","- [TensorFlow with TPUs](/notebooks/tpu.ipynb)"]},{"cell_type":"markdown","metadata":{"id":"d0LTY4qxyusG","colab_type":"text"},"source":["# **Comparing of the 5 classification algorithms:**\n","\n","\n","1.   Decision Trees\n","2.   Boosted Trees\n","3.   Random Forest\n","4.   Support Vector Machines\n","5.   Neural Networks\n","\n","# **1.Decision Trees:**\n","    The Decision Trees algorithms can be categorised under the suppervised machine learning. It can be used to solve the Classification problem as well as the Regression problem,so known as the CART(Classification and Regression Tree).\n","    The Decision trees use the tree representation to solve the problem.Using it we can represent any Boolean function on the discrete attributes.\n","   # *Some assumption that are made while using the decision tree:*\n","   \n","\n","*   At the beginning ,we consider the whole training set as the root.\n","*   Feature values are preferred to be categorical. \n","*   On the basis of attribute values records are distributed recursively.\n","*   We use statistical methods for ordering as root or the internal node.\n","\n","      There are two popular selection measures of the attributes:\n","      1. Information Gain\n","      2. Gini Index\n","      *information gain:*\n","      \n","        When we use a node in a decision tree to partition the instances into smaller subsets the entropy changes. Information gain is a measure of this change in entropy. \n","\n","    ENTROPY:\n","           Entropy is the measure of uncirtainity of a random variable, it characterizes the impurity of an arbitrary collection of examples. the higher the entropy more the information content.\n","    *Gini Index:*\n","        Gini Index is a metric to measure how often a randomly chosen element would be incorrectly identified.\n","        It means an attributewith the lower Gini Index should be preferred.\n"," # **2.Boosted Trees:**\n"," \n","        Boosted trees are the sequential ensemble of the tree models. The boosting is the process which uses a set of Machine Learning algorithm to combine weak learner to form strong learner in order to increase the accuracy of the model. Thus th e boosted tree is a set of decision trees in sequential order to increase the accuracy.\n","        \n","   *How does the boosting work?*     \n","         The basic principle behind the working of the boosting algorithm is to generate multiple weak learners and combine their predictions to form one strong rule.Many iteration are used to create the Decision stumps and combine several weak learners to form the strong learner.   \n","\n","\n","   ADABOOST:\n","            The adaboost is used to make a forest of the trees that is the boosted trees. The trees are usually just a node and two leaves called as 'Stump'.\n","        Stump is weak learner ,set of which is combined with the Adaboost to form the Boosted trees.\n","#**3.Random Forest:**\n","            Random Forest algorithm is a supervised classification algorithm. It is a parallel,bagged ensemble of the number of trees.\n","            This model have the strong predective power but lower interpretability.\n","            More hyperparameters than the decision trees that control model growth are:\n","            1. Number of trees\n","            2. Sampling rate\n","            3.Number of Variables to try.\n","            \n","            The random forest concept can be simplified as :\n","            the random forest is the combination of the Decision trees. Let there are number of the decision trees used to resolve a datasets and there are the different outcomes. The outcome which has been repeated most, means having the highest voting is the final consequence of the Random Forest algorithm result.\n","  # **4.Support Vector Machines:**\n","  \n","           Support Vector Machine (SVM) is a superwised machine learning algorithm which can be used for both the classification and regression challenges.However it is mostly used for the classification.\n","           A Support Vector Machine (SVM) is a discriminative classifier formally defined by a separating hyperplane. In other word , given labeled training data , the algorithm outputs an optimal hyperplane which categorises new examples. In two dimentional space this hyperplane is a line deviding the plane in two parts where in each case lay in either side.\n","           \n","  KERNELS:  \n","                \n","                If we have such a data that no any line can separate it into two classes in the X-Y plane. So, now we have to apply the transformation and add one more dimmention called as Z-axis.Now a line can be drawn which can separate the data into two classes. When we return to the original plane, it maps a circular boundry called as the 'kernels'.\n","  \n","  MARGIN:\n","  \n","             The distance between the hyperplane and  the nearest datapoint from either set is called as 'margin'.\n","             \n","# **5.Neural Networks**     \n","              \n","            \n","        The Neural Network model is carried out on the basis of the Neural Network of the Human brain.\n","        An artificial neural network is a massively distributed processor that has a natural propensity for storing the experimental knowledge and making it available for use.\n","        The unit block of the neural network is the 'Perceptron'.\n","        The perceptrons are simple single-layer binary classifier , which divide the input space with a linear decision boundry.the perceptron consists of two type of nodes:\n","        1.Input nodes.\n","        2.Output nodes.\n","        \n","        # Neural network building blocks are as follows:\n","        1.Weight\n","        2.Neuron\n","        3.Identity Layer\n","        4.Non-linearties\n","        5.Activation function\n","        6.Recurrent neural network\n","        7.Attention Modules\n","        8.Memories\n","        9.Residual Modules. \n","            \n","     \n","        \n"," \n","         \n","  \n"]},{"cell_type":"code","metadata":{"id":"BlpKXsP3hYDo","colab_type":"code","colab":{}},"source":["import pandas as pd"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"kOKhDn_Zk4Vd","colab_type":"code","colab":{}},"source":["mydata=pd.read_csv(r\"/content/drug_dt.csv\")"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"gqoQYcVtq_Ac","colab_type":"code","outputId":"5f8cc673-f44b-4329-ff4f-6e6638849789","executionInfo":{"status":"ok","timestamp":1565501869865,"user_tz":240,"elapsed":1507,"user":{"displayName":"","photoUrl":"","userId":""}},"colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["mydata"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>BP</th>\n","      <th>Cholesterol</th>\n","      <th>Na_to_K</th>\n","      <th>Drug</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>23</td>\n","      <td>F</td>\n","      <td>HIGH</td>\n","      <td>HIGH</td>\n","      <td>25.355</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>47</td>\n","      <td>M</td>\n","      <td>LOW</td>\n","      <td>HIGH</td>\n","      <td>13.093</td>\n","      <td>drugC</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>47</td>\n","      <td>M</td>\n","      <td>LOW</td>\n","      <td>HIGH</td>\n","      <td>10.114</td>\n","      <td>drugC</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>28</td>\n","      <td>F</td>\n","      <td>NORMAL</td>\n","      <td>HIGH</td>\n","      <td>7.798</td>\n","      <td>drugX</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>61</td>\n","      <td>F</td>\n","      <td>LOW</td>\n","      <td>HIGH</td>\n","      <td>18.043</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>22</td>\n","      <td>F</td>\n","      <td>NORMAL</td>\n","      <td>HIGH</td>\n","      <td>8.607</td>\n","      <td>drugX</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>49</td>\n","      <td>F</td>\n","      <td>NORMAL</td>\n","      <td>HIGH</td>\n","      <td>16.275</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>41</td>\n","      <td>M</td>\n","      <td>LOW</td>\n","      <td>HIGH</td>\n","      <td>11.037</td>\n","      <td>drugC</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>60</td>\n","      <td>M</td>\n","      <td>NORMAL</td>\n","      <td>HIGH</td>\n","      <td>15.171</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>43</td>\n","      <td>M</td>\n","      <td>LOW</td>\n","      <td>NORMAL</td>\n","      <td>19.368</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>47</td>\n","      <td>F</td>\n","      <td>LOW</td>\n","      <td>HIGH</td>\n","      <td>11.767</td>\n","      <td>drugC</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>34</td>\n","      <td>F</td>\n","      <td>HIGH</td>\n","      <td>NORMAL</td>\n","      <td>19.199</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>43</td>\n","      <td>M</td>\n","      <td>LOW</td>\n","      <td>HIGH</td>\n","      <td>15.376</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>74</td>\n","      <td>F</td>\n","      <td>LOW</td>\n","      <td>HIGH</td>\n","      <td>20.942</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>50</td>\n","      <td>F</td>\n","      <td>NORMAL</td>\n","      <td>HIGH</td>\n","      <td>12.703</td>\n","      <td>drugX</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>16</td>\n","      <td>F</td>\n","      <td>HIGH</td>\n","      <td>NORMAL</td>\n","      <td>15.516</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>69</td>\n","      <td>M</td>\n","      <td>LOW</td>\n","      <td>NORMAL</td>\n","      <td>11.455</td>\n","      <td>drugX</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>43</td>\n","      <td>M</td>\n","      <td>HIGH</td>\n","      <td>HIGH</td>\n","      <td>13.972</td>\n","      <td>drugA</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>23</td>\n","      <td>M</td>\n","      <td>LOW</td>\n","      <td>HIGH</td>\n","      <td>7.298</td>\n","      <td>drugC</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>32</td>\n","      <td>F</td>\n","      <td>HIGH</td>\n","      <td>NORMAL</td>\n","      <td>25.974</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>57</td>\n","      <td>M</td>\n","      <td>LOW</td>\n","      <td>NORMAL</td>\n","      <td>19.128</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>63</td>\n","      <td>M</td>\n","      <td>NORMAL</td>\n","      <td>HIGH</td>\n","      <td>25.917</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>47</td>\n","      <td>M</td>\n","      <td>LOW</td>\n","      <td>NORMAL</td>\n","      <td>30.568</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>48</td>\n","      <td>F</td>\n","      <td>LOW</td>\n","      <td>HIGH</td>\n","      <td>15.036</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>33</td>\n","      <td>F</td>\n","      <td>LOW</td>\n","      <td>HIGH</td>\n","      <td>33.486</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>28</td>\n","      <td>F</td>\n","      <td>HIGH</td>\n","      <td>NORMAL</td>\n","      <td>18.809</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>31</td>\n","      <td>M</td>\n","      <td>HIGH</td>\n","      <td>HIGH</td>\n","      <td>30.366</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>49</td>\n","      <td>F</td>\n","      <td>NORMAL</td>\n","      <td>NORMAL</td>\n","      <td>9.381</td>\n","      <td>drugX</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>39</td>\n","      <td>F</td>\n","      <td>LOW</td>\n","      <td>NORMAL</td>\n","      <td>22.697</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>45</td>\n","      <td>M</td>\n","      <td>LOW</td>\n","      <td>HIGH</td>\n","      <td>17.951</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>170</th>\n","      <td>28</td>\n","      <td>F</td>\n","      <td>NORMAL</td>\n","      <td>HIGH</td>\n","      <td>12.879</td>\n","      <td>drugX</td>\n","    </tr>\n","    <tr>\n","      <th>171</th>\n","      <td>45</td>\n","      <td>M</td>\n","      <td>LOW</td>\n","      <td>NORMAL</td>\n","      <td>10.017</td>\n","      <td>drugX</td>\n","    </tr>\n","    <tr>\n","      <th>172</th>\n","      <td>39</td>\n","      <td>F</td>\n","      <td>NORMAL</td>\n","      <td>NORMAL</td>\n","      <td>17.225</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>173</th>\n","      <td>41</td>\n","      <td>F</td>\n","      <td>LOW</td>\n","      <td>NORMAL</td>\n","      <td>18.739</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>174</th>\n","      <td>42</td>\n","      <td>M</td>\n","      <td>HIGH</td>\n","      <td>NORMAL</td>\n","      <td>12.766</td>\n","      <td>drugA</td>\n","    </tr>\n","    <tr>\n","      <th>175</th>\n","      <td>73</td>\n","      <td>F</td>\n","      <td>HIGH</td>\n","      <td>HIGH</td>\n","      <td>18.348</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>176</th>\n","      <td>48</td>\n","      <td>M</td>\n","      <td>HIGH</td>\n","      <td>NORMAL</td>\n","      <td>10.446</td>\n","      <td>drugA</td>\n","    </tr>\n","    <tr>\n","      <th>177</th>\n","      <td>25</td>\n","      <td>M</td>\n","      <td>NORMAL</td>\n","      <td>HIGH</td>\n","      <td>19.011</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>178</th>\n","      <td>39</td>\n","      <td>M</td>\n","      <td>NORMAL</td>\n","      <td>HIGH</td>\n","      <td>15.969</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>179</th>\n","      <td>67</td>\n","      <td>F</td>\n","      <td>NORMAL</td>\n","      <td>HIGH</td>\n","      <td>15.891</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>180</th>\n","      <td>22</td>\n","      <td>F</td>\n","      <td>HIGH</td>\n","      <td>NORMAL</td>\n","      <td>22.818</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>181</th>\n","      <td>59</td>\n","      <td>F</td>\n","      <td>NORMAL</td>\n","      <td>HIGH</td>\n","      <td>13.884</td>\n","      <td>drugX</td>\n","    </tr>\n","    <tr>\n","      <th>182</th>\n","      <td>20</td>\n","      <td>F</td>\n","      <td>LOW</td>\n","      <td>NORMAL</td>\n","      <td>11.686</td>\n","      <td>drugX</td>\n","    </tr>\n","    <tr>\n","      <th>183</th>\n","      <td>36</td>\n","      <td>F</td>\n","      <td>HIGH</td>\n","      <td>NORMAL</td>\n","      <td>15.490</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>184</th>\n","      <td>18</td>\n","      <td>F</td>\n","      <td>HIGH</td>\n","      <td>HIGH</td>\n","      <td>37.188</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>185</th>\n","      <td>57</td>\n","      <td>F</td>\n","      <td>NORMAL</td>\n","      <td>NORMAL</td>\n","      <td>25.893</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>186</th>\n","      <td>70</td>\n","      <td>M</td>\n","      <td>HIGH</td>\n","      <td>HIGH</td>\n","      <td>9.849</td>\n","      <td>drugB</td>\n","    </tr>\n","    <tr>\n","      <th>187</th>\n","      <td>47</td>\n","      <td>M</td>\n","      <td>HIGH</td>\n","      <td>HIGH</td>\n","      <td>10.403</td>\n","      <td>drugA</td>\n","    </tr>\n","    <tr>\n","      <th>188</th>\n","      <td>65</td>\n","      <td>M</td>\n","      <td>HIGH</td>\n","      <td>NORMAL</td>\n","      <td>34.997</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>189</th>\n","      <td>64</td>\n","      <td>M</td>\n","      <td>HIGH</td>\n","      <td>NORMAL</td>\n","      <td>20.932</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>190</th>\n","      <td>58</td>\n","      <td>M</td>\n","      <td>HIGH</td>\n","      <td>HIGH</td>\n","      <td>18.991</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>191</th>\n","      <td>23</td>\n","      <td>M</td>\n","      <td>HIGH</td>\n","      <td>HIGH</td>\n","      <td>8.011</td>\n","      <td>drugA</td>\n","    </tr>\n","    <tr>\n","      <th>192</th>\n","      <td>72</td>\n","      <td>M</td>\n","      <td>LOW</td>\n","      <td>HIGH</td>\n","      <td>16.310</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>193</th>\n","      <td>72</td>\n","      <td>M</td>\n","      <td>LOW</td>\n","      <td>HIGH</td>\n","      <td>6.769</td>\n","      <td>drugC</td>\n","    </tr>\n","    <tr>\n","      <th>194</th>\n","      <td>46</td>\n","      <td>F</td>\n","      <td>HIGH</td>\n","      <td>HIGH</td>\n","      <td>34.686</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>195</th>\n","      <td>56</td>\n","      <td>F</td>\n","      <td>LOW</td>\n","      <td>HIGH</td>\n","      <td>11.567</td>\n","      <td>drugC</td>\n","    </tr>\n","    <tr>\n","      <th>196</th>\n","      <td>16</td>\n","      <td>M</td>\n","      <td>LOW</td>\n","      <td>HIGH</td>\n","      <td>12.006</td>\n","      <td>drugC</td>\n","    </tr>\n","    <tr>\n","      <th>197</th>\n","      <td>52</td>\n","      <td>M</td>\n","      <td>NORMAL</td>\n","      <td>HIGH</td>\n","      <td>9.894</td>\n","      <td>drugX</td>\n","    </tr>\n","    <tr>\n","      <th>198</th>\n","      <td>23</td>\n","      <td>M</td>\n","      <td>NORMAL</td>\n","      <td>NORMAL</td>\n","      <td>14.020</td>\n","      <td>drugX</td>\n","    </tr>\n","    <tr>\n","      <th>199</th>\n","      <td>40</td>\n","      <td>F</td>\n","      <td>LOW</td>\n","      <td>NORMAL</td>\n","      <td>11.349</td>\n","      <td>drugX</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>200 rows × 6 columns</p>\n","</div>"],"text/plain":["     Age Sex      BP Cholesterol  Na_to_K   Drug\n","0     23   F    HIGH        HIGH   25.355  drugY\n","1     47   M     LOW        HIGH   13.093  drugC\n","2     47   M     LOW        HIGH   10.114  drugC\n","3     28   F  NORMAL        HIGH    7.798  drugX\n","4     61   F     LOW        HIGH   18.043  drugY\n","5     22   F  NORMAL        HIGH    8.607  drugX\n","6     49   F  NORMAL        HIGH   16.275  drugY\n","7     41   M     LOW        HIGH   11.037  drugC\n","8     60   M  NORMAL        HIGH   15.171  drugY\n","9     43   M     LOW      NORMAL   19.368  drugY\n","10    47   F     LOW        HIGH   11.767  drugC\n","11    34   F    HIGH      NORMAL   19.199  drugY\n","12    43   M     LOW        HIGH   15.376  drugY\n","13    74   F     LOW        HIGH   20.942  drugY\n","14    50   F  NORMAL        HIGH   12.703  drugX\n","15    16   F    HIGH      NORMAL   15.516  drugY\n","16    69   M     LOW      NORMAL   11.455  drugX\n","17    43   M    HIGH        HIGH   13.972  drugA\n","18    23   M     LOW        HIGH    7.298  drugC\n","19    32   F    HIGH      NORMAL   25.974  drugY\n","20    57   M     LOW      NORMAL   19.128  drugY\n","21    63   M  NORMAL        HIGH   25.917  drugY\n","22    47   M     LOW      NORMAL   30.568  drugY\n","23    48   F     LOW        HIGH   15.036  drugY\n","24    33   F     LOW        HIGH   33.486  drugY\n","25    28   F    HIGH      NORMAL   18.809  drugY\n","26    31   M    HIGH        HIGH   30.366  drugY\n","27    49   F  NORMAL      NORMAL    9.381  drugX\n","28    39   F     LOW      NORMAL   22.697  drugY\n","29    45   M     LOW        HIGH   17.951  drugY\n","..   ...  ..     ...         ...      ...    ...\n","170   28   F  NORMAL        HIGH   12.879  drugX\n","171   45   M     LOW      NORMAL   10.017  drugX\n","172   39   F  NORMAL      NORMAL   17.225  drugY\n","173   41   F     LOW      NORMAL   18.739  drugY\n","174   42   M    HIGH      NORMAL   12.766  drugA\n","175   73   F    HIGH        HIGH   18.348  drugY\n","176   48   M    HIGH      NORMAL   10.446  drugA\n","177   25   M  NORMAL        HIGH   19.011  drugY\n","178   39   M  NORMAL        HIGH   15.969  drugY\n","179   67   F  NORMAL        HIGH   15.891  drugY\n","180   22   F    HIGH      NORMAL   22.818  drugY\n","181   59   F  NORMAL        HIGH   13.884  drugX\n","182   20   F     LOW      NORMAL   11.686  drugX\n","183   36   F    HIGH      NORMAL   15.490  drugY\n","184   18   F    HIGH        HIGH   37.188  drugY\n","185   57   F  NORMAL      NORMAL   25.893  drugY\n","186   70   M    HIGH        HIGH    9.849  drugB\n","187   47   M    HIGH        HIGH   10.403  drugA\n","188   65   M    HIGH      NORMAL   34.997  drugY\n","189   64   M    HIGH      NORMAL   20.932  drugY\n","190   58   M    HIGH        HIGH   18.991  drugY\n","191   23   M    HIGH        HIGH    8.011  drugA\n","192   72   M     LOW        HIGH   16.310  drugY\n","193   72   M     LOW        HIGH    6.769  drugC\n","194   46   F    HIGH        HIGH   34.686  drugY\n","195   56   F     LOW        HIGH   11.567  drugC\n","196   16   M     LOW        HIGH   12.006  drugC\n","197   52   M  NORMAL        HIGH    9.894  drugX\n","198   23   M  NORMAL      NORMAL   14.020  drugX\n","199   40   F     LOW      NORMAL   11.349  drugX\n","\n","[200 rows x 6 columns]"]},"metadata":{"tags":[]},"execution_count":19}]},{"cell_type":"code","metadata":{"id":"8KfHvpywvQBp","colab_type":"code","outputId":"7b935ebc-6265-44e4-8e66-eb813e6b3180","executionInfo":{"status":"ok","timestamp":1565501873828,"user_tz":240,"elapsed":1577,"user":{"displayName":"","photoUrl":"","userId":""}},"colab":{"base_uri":"https://localhost:8080/","height":204}},"source":["mydata.head(5)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>BP</th>\n","      <th>Cholesterol</th>\n","      <th>Na_to_K</th>\n","      <th>Drug</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>23</td>\n","      <td>F</td>\n","      <td>HIGH</td>\n","      <td>HIGH</td>\n","      <td>25.355</td>\n","      <td>drugY</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>47</td>\n","      <td>M</td>\n","      <td>LOW</td>\n","      <td>HIGH</td>\n","      <td>13.093</td>\n","      <td>drugC</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>47</td>\n","      <td>M</td>\n","      <td>LOW</td>\n","      <td>HIGH</td>\n","      <td>10.114</td>\n","      <td>drugC</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>28</td>\n","      <td>F</td>\n","      <td>NORMAL</td>\n","      <td>HIGH</td>\n","      <td>7.798</td>\n","      <td>drugX</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>61</td>\n","      <td>F</td>\n","      <td>LOW</td>\n","      <td>HIGH</td>\n","      <td>18.043</td>\n","      <td>drugY</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Age Sex      BP Cholesterol  Na_to_K   Drug\n","0   23   F    HIGH        HIGH   25.355  drugY\n","1   47   M     LOW        HIGH   13.093  drugC\n","2   47   M     LOW        HIGH   10.114  drugC\n","3   28   F  NORMAL        HIGH    7.798  drugX\n","4   61   F     LOW        HIGH   18.043  drugY"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"code","metadata":{"id":"P4wJe18EvXfH","colab_type":"code","outputId":"7c989f55-b5ea-434f-e147-e4faded1488b","executionInfo":{"status":"ok","timestamp":1565501925558,"user_tz":240,"elapsed":1153,"user":{"displayName":"","photoUrl":"","userId":""}},"colab":{"base_uri":"https://localhost:8080/","height":136}},"source":["mydata.dtypes"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Age              int64\n","Sex             object\n","BP              object\n","Cholesterol     object\n","Na_to_K        float64\n","Drug            object\n","dtype: object"]},"metadata":{"tags":[]},"execution_count":21}]},{"cell_type":"code","metadata":{"id":"C5VMswOZwFEY","colab_type":"code","colab":{}},"source":["#segregation\n","from matplotlib import pyplot as plt\n","import seaborn as sb"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"K8z4DESrwgAX","colab_type":"code","outputId":"1dff07fb-bd9e-41db-9780-73b7a05f38e5","executionInfo":{"status":"ok","timestamp":1565501932676,"user_tz":240,"elapsed":1878,"user":{"displayName":"","photoUrl":"","userId":""}},"colab":{"base_uri":"https://localhost:8080/","height":283}},"source":["sb.countplot(x='Sex',data=mydata,hue='Drug')\n","plt.show()"],"execution_count":0,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"_UTgqURRw9iE","colab_type":"code","colab":{}},"source":["x_input=mydata.iloc[:,0:5]\n","y_output=mydata.iloc[:,5]"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"CNbF3urvx4UL","colab_type":"code","outputId":"8e4fcff7-2e60-4a27-e7e2-f1b10a488832","executionInfo":{"status":"ok","timestamp":1565502498628,"user_tz":240,"elapsed":713,"user":{"displayName":"","photoUrl":"","userId":""}},"colab":{"base_uri":"https://localhost:8080/","height":204}},"source":["x_input.head()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>BP</th>\n","      <th>Cholesterol</th>\n","      <th>Na_to_K</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>23</td>\n","      <td>F</td>\n","      <td>HIGH</td>\n","      <td>HIGH</td>\n","      <td>25.355</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>47</td>\n","      <td>M</td>\n","      <td>LOW</td>\n","      <td>HIGH</td>\n","      <td>13.093</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>47</td>\n","      <td>M</td>\n","      <td>LOW</td>\n","      <td>HIGH</td>\n","      <td>10.114</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>28</td>\n","      <td>F</td>\n","      <td>NORMAL</td>\n","      <td>HIGH</td>\n","      <td>7.798</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>61</td>\n","      <td>F</td>\n","      <td>LOW</td>\n","      <td>HIGH</td>\n","      <td>18.043</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Age Sex      BP Cholesterol  Na_to_K\n","0   23   F    HIGH        HIGH   25.355\n","1   47   M     LOW        HIGH   13.093\n","2   47   M     LOW        HIGH   10.114\n","3   28   F  NORMAL        HIGH    7.798\n","4   61   F     LOW        HIGH   18.043"]},"metadata":{"tags":[]},"execution_count":43}]},{"cell_type":"code","metadata":{"id":"jKGXg9jZyAm9","colab_type":"code","outputId":"72fb15ea-9bee-490a-aefd-105f2a1b7834","executionInfo":{"status":"ok","timestamp":1565502503415,"user_tz":240,"elapsed":1615,"user":{"displayName":"","photoUrl":"","userId":""}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["x_input.keys()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['Age', 'Sex', 'BP', 'Cholesterol', 'Na_to_K'], dtype='object')"]},"metadata":{"tags":[]},"execution_count":44}]},{"cell_type":"code","metadata":{"id":"PeDs9ityyGjS","colab_type":"code","colab":{}},"source":["x_input[\"Sex\"]=x_input[\"Sex\"].map({\"F\":1,\"M\":'2'})"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"mOiqBG930BLr","colab_type":"code","colab":{}},"source":["x_input[\"BP\"]=x_input[\"BP\"].map({\"LOW\":0,\"NORMAL\":1,\"HIGH\":2})"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"yNNtkzsh05fX","colab_type":"code","colab":{}},"source":["x_input[\"Cholesterol\"]=x_input[\"Cholesterol\"].map({\"NORMAL\":1,\"HIGH\":2})"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Eo_ZNCU69dSC","colab_type":"code","outputId":"26253caa-159e-490b-9e32-febc13954d23","executionInfo":{"status":"ok","timestamp":1565502521339,"user_tz":240,"elapsed":1352,"user":{"displayName":"","photoUrl":"","userId":""}},"colab":{"base_uri":"https://localhost:8080/","height":235}},"source":["x_input.head(6)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Sex</th>\n","      <th>BP</th>\n","      <th>Cholesterol</th>\n","      <th>Na_to_K</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>23</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>25.355</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>47</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>13.093</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>47</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>10.114</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>28</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>7.798</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>61</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>18.043</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>22</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>8.607</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Age Sex  BP  Cholesterol  Na_to_K\n","0   23   1   2            2   25.355\n","1   47   2   0            2   13.093\n","2   47   2   0            2   10.114\n","3   28   1   1            2    7.798\n","4   61   1   0            2   18.043\n","5   22   1   1            2    8.607"]},"metadata":{"tags":[]},"execution_count":48}]},{"cell_type":"code","metadata":{"id":"Dm9NKwzv9rVJ","colab_type":"code","colab":{}},"source":["xa=x_input.values"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"yRvn51t6OSTo","colab_type":"code","colab":{}},"source":["ya=y_output.values"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"qO8Arga0OYDy","colab_type":"code","outputId":"86154650-23fb-42b9-d749-9a3b839ed010","executionInfo":{"status":"ok","timestamp":1565502838593,"user_tz":240,"elapsed":1243,"user":{"displayName":"","photoUrl":"","userId":""}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["type(xa)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["numpy.ndarray"]},"metadata":{"tags":[]},"execution_count":55}]},{"cell_type":"code","metadata":{"id":"1T8bM8n-OeFZ","colab_type":"code","outputId":"7fd0c368-18ab-44b1-a704-4ab26424417a","executionInfo":{"status":"ok","timestamp":1565502814590,"user_tz":240,"elapsed":1521,"user":{"displayName":"","photoUrl":"","userId":""}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["type(ya)"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["numpy.ndarray"]},"metadata":{"tags":[]},"execution_count":54}]},{"cell_type":"code","metadata":{"id":"mcXR2Q_lOjmJ","colab_type":"code","colab":{}},"source":["from sklearn.model_selection import train_test_split"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"2aB5DLhTPpHo","colab_type":"code","colab":{}},"source":["x_train,x_test,y_train,y_test=train_test_split(xa,ya,test_size=.30,random_state=101)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"QqxYtZeHQA0Y","colab_type":"code","colab":{}},"source":["# Decision tree"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"SOZtS8v5QJII","colab_type":"code","colab":{}},"source":["from sklearn.tree import DecisionTreeClassifier"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"uqOyOZENQZ-O","colab_type":"code","colab":{}},"source":["trainer=DecisionTreeClassifier(criterion='entropy')"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"rMIwEGs_Qvif","colab_type":"code","colab":{}},"source":["learner=trainer.fit(x_train,y_train)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"53LteuNDQ4iM","colab_type":"code","colab":{}},"source":["yac=y_test"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Uo6xfjvpQ9zc","colab_type":"code","colab":{}},"source":["yp=learner.predict(x_test)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"PdcOwC8cRHA2","colab_type":"code","colab":{}},"source":["from sklearn.metrics import accuracy_score,jaccard_similarity_score"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"2tS5LpXXRjtc","colab_type":"code","colab":{}},"source":["acc=accuracy_score(yac,yp)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"754D2QJjRpxQ","colab_type":"code","outputId":"ec7139cf-0f6a-4e7d-ee09-d4c5e969548f","executionInfo":{"status":"ok","timestamp":1565503437832,"user_tz":240,"elapsed":1036,"user":{"displayName":"","photoUrl":"","userId":""}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["acc"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9833333333333333"]},"metadata":{"tags":[]},"execution_count":66}]},{"cell_type":"code","metadata":{"id":"1qGkFlD6RrbS","colab_type":"code","outputId":"589c205f-0ca2-4d73-920d-567216efb07b","executionInfo":{"status":"ok","timestamp":1565503464701,"user_tz":240,"elapsed":1413,"user":{"displayName":"","photoUrl":"","userId":""}},"colab":{"base_uri":"https://localhost:8080/","height":71}},"source":["jss=jaccard_similarity_score(yac,yp)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/metrics/classification.py:635: DeprecationWarning: jaccard_similarity_score has been deprecated and replaced with jaccard_score. It will be removed in version 0.23. This implementation has surprising behavior for binary and multiclass classification tasks.\n","  'and multiclass classification tasks.', DeprecationWarning)\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"pjX0nje8Rx58","colab_type":"code","outputId":"5ab15a69-ae7d-4b98-e157-fbb6baff03a9","executionInfo":{"status":"ok","timestamp":1565503473345,"user_tz":240,"elapsed":1497,"user":{"displayName":"","photoUrl":"","userId":""}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["jss"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9833333333333333"]},"metadata":{"tags":[]},"execution_count":68}]},{"cell_type":"code","metadata":{"id":"jXuxJmUkRz_U","colab_type":"code","colab":{}},"source":["# Boosted tree"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"fcEGWZmjR4_v","colab_type":"code","colab":{}},"source":["from sklearn.ensemble import AdaBoostClassifier"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"P1IJ4U9lS9hM","colab_type":"code","colab":{}},"source":["trainer=AdaBoostClassifier()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"c2jpgfvdTW3G","colab_type":"code","colab":{}},"source":["learner=trainer.fit(x_train,y_train)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"oogLWWPgTiak","colab_type":"code","colab":{}},"source":["yac=y_test"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"UnncV2KWTmjs","colab_type":"code","colab":{}},"source":["ypb=learner.predict(x_test)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"t564WlLvTu3W","colab_type":"code","colab":{}},"source":["acc=accuracy_score(yac,ypb)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"TYQwRIhDTwQD","colab_type":"code","outputId":"701098da-0ab9-49cf-c54f-564a425e38be","executionInfo":{"status":"ok","timestamp":1565504048371,"user_tz":240,"elapsed":1485,"user":{"displayName":"","photoUrl":"","userId":""}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["acc"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7333333333333333"]},"metadata":{"tags":[]},"execution_count":80}]},{"cell_type":"code","metadata":{"id":"s2qwbxstUAXp","colab_type":"code","outputId":"af248715-b9c5-48ab-e7e1-69099490e76e","executionInfo":{"status":"ok","timestamp":1565504110134,"user_tz":240,"elapsed":1050,"user":{"displayName":"","photoUrl":"","userId":""}},"colab":{"base_uri":"https://localhost:8080/","height":71}},"source":["jss=jaccard_similarity_score(yac,ypb)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/metrics/classification.py:635: DeprecationWarning: jaccard_similarity_score has been deprecated and replaced with jaccard_score. It will be removed in version 0.23. This implementation has surprising behavior for binary and multiclass classification tasks.\n","  'and multiclass classification tasks.', DeprecationWarning)\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"ZA1XiMYFUPkY","colab_type":"code","outputId":"f13bc08d-431e-4753-c44c-b853d459782a","executionInfo":{"status":"ok","timestamp":1565504115909,"user_tz":240,"elapsed":1244,"user":{"displayName":"","photoUrl":"","userId":""}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["jss"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7333333333333333"]},"metadata":{"tags":[]},"execution_count":82}]},{"cell_type":"code","metadata":{"id":"J26nlboRUQ8X","colab_type":"code","colab":{}},"source":["#Random Forest"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"4se44A_GUZ8D","colab_type":"code","colab":{}},"source":["from sklearn.ensemble import RandomForestClassifier"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"fFrdaoMvUzHn","colab_type":"code","colab":{}},"source":["trainer=RandomForestClassifier()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"bwSSfc9vVPzl","colab_type":"code","colab":{}},"source":["learner=trainer.fit(x_train,y_train)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"U_jcf6AuVX-q","colab_type":"code","colab":{}},"source":["yac=y_test"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"5rpAsSGnVnFG","colab_type":"code","colab":{}},"source":["ypr=learner.predict(x_test)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"7rhgfgDpVxww","colab_type":"code","colab":{}},"source":["acc=accuracy_score(yac,ypr)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"qXeZFWxbV44D","colab_type":"code","outputId":"3fb8e1b2-80c7-4f42-ef74-670b0064674a","executionInfo":{"status":"ok","timestamp":1565504545956,"user_tz":240,"elapsed":1191,"user":{"displayName":"","photoUrl":"","userId":""}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["acc"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.95"]},"metadata":{"tags":[]},"execution_count":92}]},{"cell_type":"code","metadata":{"id":"zqaeQw1CV57l","colab_type":"code","outputId":"68c81c29-f0f4-4116-928c-f5cefaacc92c","executionInfo":{"status":"ok","timestamp":1565504578917,"user_tz":240,"elapsed":1298,"user":{"displayName":"","photoUrl":"","userId":""}},"colab":{"base_uri":"https://localhost:8080/","height":71}},"source":["jss=jaccard_similarity_score(yac,ypr)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/metrics/classification.py:635: DeprecationWarning: jaccard_similarity_score has been deprecated and replaced with jaccard_score. It will be removed in version 0.23. This implementation has surprising behavior for binary and multiclass classification tasks.\n","  'and multiclass classification tasks.', DeprecationWarning)\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"JUI0ZkuRWB8x","colab_type":"code","outputId":"354f010d-cb03-4b3e-b28a-c37e9258bf3b","executionInfo":{"status":"ok","timestamp":1565504583126,"user_tz":240,"elapsed":1510,"user":{"displayName":"","photoUrl":"","userId":""}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["jss"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.95"]},"metadata":{"tags":[]},"execution_count":94}]},{"cell_type":"code","metadata":{"id":"QhPrXGFRWC7u","colab_type":"code","colab":{}},"source":["#SVM"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"FKqrjdN3WINy","colab_type":"code","colab":{}},"source":["from sklearn.svm import LinearSVC"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"D2gBUyezXKW3","colab_type":"code","colab":{}},"source":["trainer=LinearSVC()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"GbyfGBNlXPrh","colab_type":"code","outputId":"0d44c61a-5be4-4f69-8186-34ef57fc7fb5","executionInfo":{"status":"ok","timestamp":1565504996793,"user_tz":240,"elapsed":688,"user":{"displayName":"","photoUrl":"","userId":""}},"colab":{"base_uri":"https://localhost:8080/","height":71}},"source":["learner=trainer.fit(x_train,y_train)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/svm/base.py:929: ConvergenceWarning: Liblinear failed to converge, increase the number of iterations.\n","  \"the number of iterations.\", ConvergenceWarning)\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"rDnwAo00XmjD","colab_type":"code","colab":{}},"source":["yac=y_test"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"LqTIEWoSXrzz","colab_type":"code","colab":{}},"source":["yps=learner.predict(x_test)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"C8JPgbTfXzxV","colab_type":"code","colab":{}},"source":["acc=accuracy_score(yac,yps)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"LUtJopCPX47Q","colab_type":"code","outputId":"ea6a2025-b584-4447-cf92-fdab339673b1","executionInfo":{"status":"ok","timestamp":1565505070435,"user_tz":240,"elapsed":1400,"user":{"displayName":"","photoUrl":"","userId":""}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["acc"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.6166666666666667"]},"metadata":{"tags":[]},"execution_count":105}]},{"cell_type":"code","metadata":{"id":"BlqHcm1LX57Y","colab_type":"code","outputId":"ea7eecd0-2a5f-447e-a715-d8b9a166fa18","executionInfo":{"status":"ok","timestamp":1565505120540,"user_tz":240,"elapsed":1089,"user":{"displayName":"","photoUrl":"","userId":""}},"colab":{"base_uri":"https://localhost:8080/","height":71}},"source":["jss=jaccard_similarity_score(yac,yps)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/metrics/classification.py:635: DeprecationWarning: jaccard_similarity_score has been deprecated and replaced with jaccard_score. It will be removed in version 0.23. This implementation has surprising behavior for binary and multiclass classification tasks.\n","  'and multiclass classification tasks.', DeprecationWarning)\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"RLRIDvsCYGNx","colab_type":"code","outputId":"edc7d257-dbca-44cb-fb91-513334b18bd0","executionInfo":{"status":"ok","timestamp":1565505127200,"user_tz":240,"elapsed":1470,"user":{"displayName":"","photoUrl":"","userId":""}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["jss"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.6166666666666667"]},"metadata":{"tags":[]},"execution_count":107}]},{"cell_type":"code","metadata":{"id":"7jaxPeLYYHxa","colab_type":"code","colab":{}},"source":["#Neural Network"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"hQcMAfhMYN7_","colab_type":"code","colab":{}},"source":["from sklearn.neural_network import MLPClassifier"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"5EwIdX22YkH-","colab_type":"code","colab":{}},"source":["trainer=MLPClassifier(max_iter=5000)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"yJxJhLT0aLVW","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"PoNzCjQ0Y-hZ","colab_type":"code","colab":{}},"source":["learner=trainer.fit(x_train,y_train)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"4oWlOmdvZHOI","colab_type":"code","colab":{}},"source":["yac=y_test"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"iCMLvuY_ZLmQ","colab_type":"code","colab":{}},"source":["ypn=learner.predict(x_test)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"6EBmNXJxZRyB","colab_type":"code","colab":{}},"source":["acc=accuracy_score(yac,ypn)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"L61WQp6rZXSX","colab_type":"code","outputId":"4a7ca6f7-1da9-408f-875c-a2c152e60396","executionInfo":{"status":"ok","timestamp":1565505473687,"user_tz":240,"elapsed":904,"user":{"displayName":"","photoUrl":"","userId":""}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["acc"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.48333333333333334"]},"metadata":{"tags":[]},"execution_count":119}]},{"cell_type":"code","metadata":{"id":"jaRhUofeZYhR","colab_type":"code","outputId":"952d2206-ccf1-4351-b24d-df7a11cb0675","executionInfo":{"status":"ok","timestamp":1565505519730,"user_tz":240,"elapsed":892,"user":{"displayName":"","photoUrl":"","userId":""}},"colab":{"base_uri":"https://localhost:8080/","height":71}},"source":["jss=jaccard_similarity_score(yac,ypn)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/metrics/classification.py:635: DeprecationWarning: jaccard_similarity_score has been deprecated and replaced with jaccard_score. It will be removed in version 0.23. This implementation has surprising behavior for binary and multiclass classification tasks.\n","  'and multiclass classification tasks.', DeprecationWarning)\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"BBcw6iwXZntO","colab_type":"code","outputId":"524de8a7-f9c9-4666-f57f-fa490c3ebf9d","executionInfo":{"status":"ok","timestamp":1565505525827,"user_tz":240,"elapsed":1015,"user":{"displayName":"","photoUrl":"","userId":""}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["jss"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.48333333333333334"]},"metadata":{"tags":[]},"execution_count":121}]},{"cell_type":"code","metadata":{"id":"XX1AJNG7ZpIV","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"IWtBUU94Zqm4","colab_type":"text"},"source":["Thus , I concluded that for the given dataset decision tree is most appropriate model."]}]}